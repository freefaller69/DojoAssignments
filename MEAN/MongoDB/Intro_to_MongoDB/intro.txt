db.users.insertOne({name: "Howard", home_state: "California", lucky_number: 42, birthday: {month: 9, day: 21, year: 1977}})
{
        "acknowledged" : true,
        "insertedId" : ObjectId("59514b610231747ca226a20b")
}
db.users.insertOne({name: "Penny", home_state: "California", lucky_number: 3, birthday: {month: 5, day: 11, year: 1987}})
{
        "acknowledged" : true,
        "insertedId" : ObjectId("59514b9b0231747ca226a20c")
}
db.users.insertOne({name: "Amy", home_state: "Washington", lucky_number: 4, birthday: {month: 3, day: 15, year: 1982}})
{
        "acknowledged" : true,
        "insertedId" : ObjectId("59514bc40231747ca226a20d")
}
db.students.find()
db.users.drop()
true
db.students.drop()
true
db.dropDatabase
function () {
        if (arguments.length)
            throw Error("dropDatabase doesn't take arguments");
        return this._dbCommand({dropDatabase: 1});
    }
db.dropDatabase()
{ "dropped" : "my_first_db", "ok" : 1 }


Mikus@DESKTOP-J7U7AKK MINGW64 /c/Program Files/MongoDB/Server/3.4/bin
$ clear

Mikus@DESKTOP-J7U7AKK MINGW64 /c/Program Files/MongoDB/Server/3.4/bin
$ ./mongo
MongoDB shell version v3.4.5
connecting to: mongodb://127.0.0.1:27017
MongoDB server version: 3.4.5
show dbs
admin  0.000GB
local  0.000GB
use my_first_db
switched to db my_first_db
db.createCollection("students")
{ "ok" : 1 }
db.students.insertOne({name: "Leonard", home_state: "New Jersey", lucky_number: 11, birthday: {month: 11, day: 5, year: 1976}})
{
        "acknowledged" : true,
        "insertedId" : ObjectId("59514d12f236f16562eddcd0")
}
db.students.insertOne({name: "Sheldon", home_state: "Texas", lucky_number: 73, birthday: {month: 7, day: 3, year: 1976}})
{
        "acknowledged" : true,
        "insertedId" : ObjectId("59514d1bf236f16562eddcd1")
}
db.students.insertOne({name: "Howard", home_state: "California", lucky_number: 42, birthday: {month: 9, day: 21, year: 1977}})
{
        "acknowledged" : true,
        "insertedId" : ObjectId("59514d24f236f16562eddcd2")
}
db.students.insertOne({name: "Penny", home_state: "California", lucky_number: 3, birthday: {month: 5, day: 11, year: 1987}})
{
        "acknowledged" : true,
        "insertedId" : ObjectId("59514d2ff236f16562eddcd3")
}
db.students.insertOne({name: "Amy", home_state: "Washington", lucky_number: 4, birthday: {month: 3, day: 15, year: 1982}})
{
        "acknowledged" : true,
        "insertedId" : ObjectId("59514d3af236f16562eddcd4")
}
db.students.find()
{ "_id" : ObjectId("59514d12f236f16562eddcd0"), "name" : "Leonard", "home_state" : "New Jersey", "lucky_number" : 11, "birthday" : { "month" : 11, "day" : 5, "year" : 1976 } }
{ "_id" : ObjectId("59514d1bf236f16562eddcd1"), "name" : "Sheldon", "home_state" : "Texas", "lucky_number" : 73, "birthday" : { "month" : 7, "day" : 3, "year" : 1976 } }
{ "_id" : ObjectId("59514d24f236f16562eddcd2"), "name" : "Howard", "home_state" : "California", "lucky_number" : 42, "birthday" : { "month" : 9, "day" : 21, "year" : 1977 } }
{ "_id" : ObjectId("59514d2ff236f16562eddcd3"), "name" : "Penny", "home_state" : "California", "lucky_number" : 3, "birthday" : { "month" : 5, "day" : 11, "year" : 1987 } }
{ "_id" : ObjectId("59514d3af236f16562eddcd4"), "name" : "Amy", "home_state" : "Washington", "lucky_number" : 4, "birthday" : { "month" : 3, "day" : 15, "year" : 1982 } }
db.students.find({home_state: "California"})
{ "_id" : ObjectId("59514d24f236f16562eddcd2"), "name" : "Howard", "home_state" : "California", "lucky_number" : 42, "birthday" : { "month" : 9, "day" : 21, "year" : 1977 } }
{ "_id" : ObjectId("59514d2ff236f16562eddcd3"), "name" : "Penny", "home_state" : "California", "lucky_number" : 3, "birthday" : { "month" : 5, "day" : 11, "year" : 1987 } }
db.students.find({home_state: "Washington"})
{ "_id" : ObjectId("59514d3af236f16562eddcd4"), "name" : "Amy", "home_state" : "Washington", "lucky_number" : 4, "birthday" : { "month" : 3, "day" : 15, "year" : 1982 } }
db.students.find({lucky_number: {$gt: 3}})
{ "_id" : ObjectId("59514d12f236f16562eddcd0"), "name" : "Leonard", "home_state" : "New Jersey", "lucky_number" : 11, "birthday" : { "month" : 11, "day" : 5, "year" : 1976 } }
{ "_id" : ObjectId("59514d1bf236f16562eddcd1"), "name" : "Sheldon", "home_state" : "Texas", "lucky_number" : 73, "birthday" : { "month" : 7, "day" : 3, "year" : 1976 } }
{ "_id" : ObjectId("59514d24f236f16562eddcd2"), "name" : "Howard", "home_state" : "California", "lucky_number" : 42, "birthday" : { "month" : 9, "day" : 21, "year" : 1977 } }
{ "_id" : ObjectId("59514d3af236f16562eddcd4"), "name" : "Amy", "home_state" : "Washington", "lucky_number" : 4, "birthday" : { "month" : 3, "day" : 15, "year" : 1982 } }
db.students.find({lucky_number: {$lte: 10}})
{ "_id" : ObjectId("59514d2ff236f16562eddcd3"), "name" : "Penny", "home_state" : "California", "lucky_number" : 3, "birthday" : { "month" : 5, "day" : 11, "year" : 1987 } }
{ "_id" : ObjectId("59514d3af236f16562eddcd4"), "name" : "Amy", "home_state" : "Washington", "lucky_number" : 4, "birthday" : { "month" : 3, "day" : 15, "year" : 1982 } }
db.students.find( { $and: [{lucky_number: {$gte: 1}, lucky_number: {$lte: 9}}] })
{ "_id" : ObjectId("59514d2ff236f16562eddcd3"), "name" : "Penny", "home_state" : "California", "lucky_number" : 3, "birthday" : { "month" : 5, "day" : 11, "year" : 1987 } }
{ "_id" : ObjectId("59514d3af236f16562eddcd4"), "name" : "Amy", "home_state" : "Washington", "lucky_number" : 4, "birthday" : { "month" : 3, "day" : 15, "year" : 1982 } }

2017-06-26T12:39:49.676-0600 E QUERY    [thread1] SyntaxError: illegal character @(shell):1:0
db.students.updateMany({}, { $set: { interests: ['coding', 'brunch', 'MongoDB'] } })
{ "acknowledged" : true, "matchedCount" : 5, "modifiedCount" : 0 }
db.students.updateMany({name: "Amy"}, { $set: { interests: ['coding', 'brunch', 'MongoDB', "Playing the harp"] } })
{ "acknowledged" : true, "matchedCount" : 1, "modifiedCount" : 0 }
db.students.updateMany({name: "Sheldon"}, { $set: { interests: ['coding', 'brunch', 'MongoDB', "ComicCon", "Dr Who"] } })
{ "acknowledged" : true, "matchedCount" : 1, "modifiedCount" : 1 }
db.students.updateMany({name: "Howard"}, { $set: { interests: ['coding', 'brunch', 'MongoDB', "ComicCon", "Taxes"] } })
{ "acknowledged" : true, "matchedCount" : 1, "modifiedCount" : 1 }
db.students.updateMany({name: "Howard"}, { $pull: { interests: "Taxes" } })
{ "acknowledged" : true, "matchedCount" : 1, "modifiedCount" : 1 }
db.students.deleteMany({home_state: "California"})
{ "acknowledged" : true, "deletedCount" : 2 }
db.students.deleteMany({name: "Amy"})
{ "acknowledged" : true, "deletedCount" : 1 }
db.students.deleteOne({lucky_number: {$gt: 5}})
{ "acknowledged" : true, "deletedCount" : 1 }


Mikus@DESKTOP-J7U7AKK MINGW64 /c/Program Files/MongoDB/Server/3.4/bin
$ ./mongo
MongoDB shell version v3.4.5
connecting to: mongodb://127.0.0.1:27017
MongoDB server version: 3.4.5

db.students.updateMany({}, { $set: { number_of_belts: 0 }})
{ "acknowledged" : true, "matchedCount" : 0, "modifiedCount" : 0 }


Mikus@DESKTOP-J7U7AKK MINGW64 /c/Program Files/MongoDB/Server/3.4/bin
$ ./mongo
MongoDB shell version v3.4.5
connecting to: mongodb://127.0.0.1:27017
MongoDB server version: 3.4.5
db
test
use my_first_db
switched to db my_first_db
db.students.updateMany({}, { $set: { number_of_belts: 0 }})
{ "acknowledged" : true, "matchedCount" : 1, "modifiedCount" : 1 }
db.students.updateMany({ home_state: "Washington" }, { $inc: { number_of_belts: +1 }})
{ "acknowledged" : true, "matchedCount" : 0, "modifiedCount" : 0 }
db.students.updateMany({ $rename: {"number_of_belts": "belts_earned"}})
2017-06-26T12:59:23.168-0600 E QUERY    [thread1] TypeError: can't convert undefined to object :
DBCollection.prototype.updateMany@src/mongo/shell/crud_api.js:594:16
@(shell):1:1
db.students.updateMany({}, { $rename: {"number_of_belts": "belts_earned"}})
{ "acknowledged" : true, "matchedCount" : 1, "modifiedCount" : 1 }
db.students.updateMany({}, { $unset: {lucky_number: ""}})
{ "acknowledged" : true, "matchedCount" : 1, "modifiedCount" : 1 }
db.students.updateMany({}, { $set: {updated_on: ""}}, $currentDate: { lastModified: true })
2017-06-26T13:12:23.658-0600 E QUERY    [thread1] SyntaxError: missing ) after argument list @(shell):1:66
db.students.updateMany({},  $currentDate: { updated_on: true })
2017-06-26T13:13:40.863-0600 E QUERY    [thread1] SyntaxError: missing ) after argument list @(shell):1:40
db.students.updateMany( { }, { $currentDate: { updated_on: true } })
{ "acknowledged" : true, "matchedCount" : 1, "modifiedCount" : 1 }
